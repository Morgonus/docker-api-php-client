<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Docker\API\Model;

class TaskSpecRestartPolicy
{
    /**
     * Condition for restart.
     *
     * @var string
     */
    protected $condition;
    /**
     * Delay between restart attempts.
     *
     * @var int
     */
    protected $delay;
    /**
     * Maximum attempts to restart a given container before giving up (default value is 0, which is ignored).
     *
     * @var int
     */
    protected $maxAttempts = 0;
    /**
     * Windows is the time window used to evaluate the restart policy (default value is 0, which is unbounded).
     *
     * @var int
     */
    protected $window = 0;

    /**
     * Condition for restart.
     *
     * @return string
     */
    public function getCondition(): ?string
    {
        return $this->condition;
    }

    /**
     * Condition for restart.
     *
     * @param string $condition
     */
    public function setCondition(?string $condition): self
    {
        $this->condition = $condition;

        return $this;
    }

    /**
     * Delay between restart attempts.
     *
     * @return int
     */
    public function getDelay(): ?int
    {
        return $this->delay;
    }

    /**
     * Delay between restart attempts.
     *
     * @param int $delay
     */
    public function setDelay(?int $delay): self
    {
        $this->delay = $delay;

        return $this;
    }

    /**
     * Maximum attempts to restart a given container before giving up (default value is 0, which is ignored).
     *
     * @return int
     */
    public function getMaxAttempts(): ?int
    {
        return $this->maxAttempts;
    }

    /**
     * Maximum attempts to restart a given container before giving up (default value is 0, which is ignored).
     *
     * @param int $maxAttempts
     */
    public function setMaxAttempts(?int $maxAttempts): self
    {
        $this->maxAttempts = $maxAttempts;

        return $this;
    }

    /**
     * Windows is the time window used to evaluate the restart policy (default value is 0, which is unbounded).
     *
     * @return int
     */
    public function getWindow(): ?int
    {
        return $this->window;
    }

    /**
     * Windows is the time window used to evaluate the restart policy (default value is 0, which is unbounded).
     *
     * @param int $window
     */
    public function setWindow(?int $window): self
    {
        $this->window = $window;

        return $this;
    }
}
