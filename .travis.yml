language: php
sudo: required

services:
  - docker

cache:
  directories:
    - $HOME/.composer/cache

php:
  - 7.1
  - 7.2
  - 7.3
  - 7.4
  - hhvm

env:
  global:
    - SONAR-COMMAND="/opt/sonar-scanner"
    - LINT_COMMAND="composer lint"
    - TEST_COMMAND="composer test"
    - DOCKER_VERSION=19.03.8

matrix:
  allow_failures:
    - php: hhvm
  fast_finish: true
  include:
    - php: 7.1
      sudo: required
      services:
        - docker
      env: COMPOSER_FLAGS="--prefer-stable --prefer-lowest" COVERAGE=true TEST_COMMAND="composer test-ci"

before_install:
  - sudo apt-cache madison docker-engine
  - sudo apt-get install apt-transport-https ca-certificates curl software-properties-common
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add â€“
  - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu  $(lsb_release -cs)  stable"
  - sudo apt-get update
  - sudo apt-get install docker-ce
  - sudo apt-get install unzip wget nodejs
  - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.2.0.1873-linux.zip
  - unzip sonar-scanner-cli-4.2.0.1873-linux.zip
  - mv sonar-scanner-4.2.0.1873-linux /opt/sonar-scanner
  - travis_retry composer self-update

install:
  - travis_retry composer update ${COMPOSER_FLAGS} --prefer-source --no-interaction
  - docker pull registry:latest
  - docker run -p 5000:5000 -d registry

script:
  - $TEST_COMMAND
  - $LINT_COMMAND
  - $SONAR_COMMAND

after_success:
  - if [[ "$COVERAGE" = true ]]; then wget https://scrutinizer-ci.com/ocular.phar; fi
  - if [[ "$COVERAGE" = true ]]; then php ocular.phar code-coverage:upload --format=php-clover build/coverage.xml; fi

after_script:
  - sudo cat /var/log/upstart/docker.log